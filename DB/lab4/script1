/*
Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Н_ТИПЫ_ВЕДОМОСТЕЙ, Н_ВЕДОМОСТИ.
 Вывести атрибуты: Н_ТИПЫ_ВЕДОМОСТЕЙ.ИД, Н_ВЕДОМОСТИ.ЧЛВК_ИД.
 Фильтры (AND):
 a) Н_ТИПЫ_ВЕДОМОСТЕЙ.НАИМЕНОВАНИЕ = Перезачет.
 b) Н_ВЕДОМОСТИ.ДАТА < 2022-06-08.
 Вид соединения: INNER JOIN.
 */
select "Н_ВЕДОМОСТИ"."ТВ_ИД", "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
    from "Н_ВЕДОМОСТИ"
        inner join "Н_ТИПЫ_ВЕДОМОСТЕЙ" on "Н_ВЕДОМОСТИ"."ТВ_ИД" = "Н_ТИПЫ_ВЕДОМОСТЕЙ"."ИД"

    where "Н_ТИПЫ_ВЕДОМОСТЕЙ"."НАИМЕНОВАНИЕ" = 'Перезачет'
        and "Н_ВЕДОМОСТИ"."ДАТА" < cast('2022-06-08' as timestamp with time zone)
;


/*
 Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
 Вывести атрибуты: Н_ЛЮДИ.ОТЧЕСТВО, Н_ВЕДОМОСТИ.ДАТА, Н_СЕССИЯ.ЧЛВК_ИД.
 Фильтры (AND):
 a) Н_ЛЮДИ.ОТЧЕСТВО = Владимирович.
 b) Н_ВЕДОМОСТИ.ИД > 1250972.
 c) Н_СЕССИЯ.ИД = 27640.
 Вид соединения: INNER JOIN.
 */
select "Н_ЛЮДИ"."ОТЧЕСТВО", "Н_ВЕДОМОСТИ"."ДАТА", "Н_СЕССИЯ"."ЧЛВК_ИД"
    from "Н_ЛЮДИ"
        inner join "Н_ВЕДОМОСТИ" on "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
        inner join "Н_СЕССИЯ" on "Н_ЛЮДИ"."ИД" = "Н_СЕССИЯ"."ЧЛВК_ИД"
    where "Н_ЛЮДИ"."ОТЧЕСТВО" = 'Владимирович'
        and "Н_ВЕДОМОСТИ"."ИД" > 1250972
        and "Н_СЕССИЯ"."ИД" = 27640
;

/*
 Составить запрос, который ответит на вопрос, есть ли среди студентов группы 3102 те, кто не имеет отчества.
 */
select exists(select *
      from "Н_УЧЕНИКИ"
               inner join "Н_ЛЮДИ" НЛ on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = НЛ."ИД"
      where "Н_УЧЕНИКИ"."ГРУППА" = '3102'
        and НЛ."ОТЧЕСТВО" IS NULL);


/*
 Выдать различные отчества преподавателей и число людей с каждой из этих отчеств, ограничив список отчествами, встречающимися ровно 10 раз на на заочной форме обучения.
Для реализации использовать подзапрос.

 КАК НАЙТИ ФИО ПРЕПОДА????
 */



 /*
  Выведите таблицу со средним возрастом студентов во всех группах (Группа, Средний возраст), где средний возраст меньше максимального возраста в группе 1100.
  */
with GROUP_AVG_AGE as (
    select "Н_УЧЕНИКИ"."ГРУППА" as Группа,
           avg(AGE(НЛ."ДАТА_РОЖДЕНИЯ")) as Ср_Возраст
    from "Н_УЧЕНИКИ"
        inner join "Н_ЛЮДИ" НЛ on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = НЛ."ИД"
    group by "Н_УЧЕНИКИ"."ГРУППА")
select * from GROUP_AVG_AGE
    where GROUP_AVG_AGE.Ср_Возраст < (
        select max(AGE(НЛ."ДАТА_РОЖДЕНИЯ"))
        from "Н_УЧЕНИКИ"
            join "Н_ЛЮДИ" НЛ on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = НЛ."ИД"
        where "Н_УЧЕНИКИ"."ГРУППА" = '1100'
        )
    order by GROUP_AVG_AGE.Ср_Возраст;

/*
 Получить список студентов, зачисленных после первого сентября 2012 года на первый курс очной или заочной формы обучения. В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер и состояние пункта приказа;
Для реализации использовать подзапрос с EXISTS.

 НУ."ПЛАН_ИД" in (
            select "Н_ПЛАНЫ"."ИД"
            from "Н_ПЛАНЫ"
                join "Н_ФОРМЫ_ОБУЧЕНИЯ" on "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"

            where ("Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Очная'
                or "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Заочная')
                and "Н_ПЛАНЫ"."КУРС" = 1
        )

Примечание: печатая все значения, получаем все даты меньше 01.09.2012
 */
select  НУ."ГРУППА" as Группа,
        "Н_ЛЮДИ"."ИД" as isu,
        CONCAT("Н_ЛЮДИ"."ИМЯ", ' ', "Н_ЛЮДИ"."ФАМИЛИЯ", ' ', "Н_ЛЮДИ"."ОТЧЕСТВО") as ФИО,
        НУ."П_ПРКОК_ИД" as Номер_приказа,
        НУ."СОСТОЯНИЕ" as Состояние,
        НУ."НАЧАЛО"

    from "Н_ЛЮДИ"
        join "Н_УЧЕНИКИ" НУ on "Н_ЛЮДИ"."ИД" = НУ."ЧЛВК_ИД"

    where НУ."НАЧАЛО" > cast('1.09.2012' as timestamp with time zone)
        and  exists(
            select "Н_ПЛАНЫ"."ИД"
            from "Н_ПЛАНЫ"
                join "Н_ФОРМЫ_ОБУЧЕНИЯ" on "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"

            where ("Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Очная'
                or "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" = 'Заочная')
                and "Н_ПЛАНЫ"."КУРС" = 1
                and НУ."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
        )
    ;


/*
 Сформировать запрос для получения числа в группе No 3100 хорошистов.

 where
        "Н_УЧЕНИКИ"."ГРУППА" = '3100'
        and not exists(
            select "Н_ВЕДОМОСТИ"."ОЦЕНКА"
            from "Н_ВЕДОМОСТИ"
            where not ("ОЦЕНКА" like '\d+' and cast("ОЦЕНКА" as int)>=4)
                or not "ОЦЕНКА" = 'зачет'
                or not "ОЦЕНКА" = 'осв'
        )
 */
select
    "Н_ЛЮДИ"."ИД" as isu,
    CONCAT("Н_ЛЮДИ"."ИМЯ", ' ', "Н_ЛЮДИ"."ФАМИЛИЯ", ' ', "Н_ЛЮДИ"."ОТЧЕСТВО") as ФИО,
    "Н_УЧЕНИКИ"."ГРУППА"


    from "Н_ЛЮДИ"
        join "Н_ВЕДОМОСТИ" on "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
        join "Н_УЧЕНИКИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"

    where "Н_УЧЕНИКИ"."ГРУППА" = '3100'
        and (select count("Н_ВЕДОМОСТИ"."ОЦЕНКА")
            from "Н_ВЕДОМОСТИ"

            where ("ОЦЕНКА" like '\d+' and cast("ОЦЕНКА" as int) < 4)
                or "ОЦЕНКА" = 'незачет'
                or "ОЦЕНКА" = 'неявка' ) = 0
        or (select count("Н_ВЕДОМОСТИ"."ОЦЕНКА")
            from "Н_ВЕДОМОСТИ"

            where ("ОЦЕНКА" like '\d+' and cast("ОЦЕНКА" as int) = 4)) >= 1


;

select count("Н_ВЕДОМОСТИ"."ОЦЕНКА")
            from "Н_ВЕДОМОСТИ"
            join "Н_УЧЕНИКИ" on "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"

            where (("ОЦЕНКА" like '\d+' and cast("ОЦЕНКА" as int) < 4)
                or "ОЦЕНКА" = 'незачет'
                or "ОЦЕНКА" = 'неявка' )
                and "Н_УЧЕНИКИ"."ГРУППА" = '3100';



/*
 select
    "Н_ЛЮДИ"."ИД" as isu,
    CONCAT("Н_ЛЮДИ"."ИМЯ", ' ', "Н_ЛЮДИ"."ФАМИЛИЯ", ' ', "Н_ЛЮДИ"."ОТЧЕСТВО") as ФИО,
    "Н_УЧЕНИКИ"."ГРУППА"


    from "Н_ЛЮДИ"
        join "Н_ВЕДОМОСТИ" on "Н_ЛЮДИ"."ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
        join "Н_УЧЕНИКИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"

    where
        (select count("Н_ВЕДОМОСТИ"."ОЦЕНКА")
            from "Н_ВЕДОМОСТИ"
            join "Н_УЧЕНИКИ" on "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"

            where (("ОЦЕНКА" like '\d+' and cast("ОЦЕНКА" as int) < 4)
                or "ОЦЕНКА" = 'незачет'
                or "ОЦЕНКА" = 'неявка' )
                and "Н_УЧЕНИКИ"."ГРУППА" = '3100') = 0
        or (select count("Н_ВЕДОМОСТИ"."ОЦЕНКА")
            from "Н_ВЕДОМОСТИ"
            join "Н_УЧЕНИКИ" on "Н_ВЕДОМОСТИ"."ЧЛВК_ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"

            where ("ОЦЕНКА" like '\d+' and cast("ОЦЕНКА" as int) = 4)
                and "Н_УЧЕНИКИ"."ГРУППА" = '3100') >= 1


;

 */