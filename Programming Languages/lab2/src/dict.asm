section .text

extern string_equals
global find_word


; Поиск по словарю подходящего ключа
; Вхождение найдено - вернёт адрес начала вхождения в словарь (не значения), иначе вернёт 0.
; Аргументы:
;	rdi - указатель на начало строки
;	rsi - указатель на начало словаря
; Локально:
;	rbx - указатель на начало строки (из rdi)
;	rbp - указатель на начало словаря (из rsi)
;	rsi - указатель на обрабатываемый элемент словаря
; Вывод:
;	rax - адрес начала вхождения в словарь в rax (иначе 0)
find_word:
	mov rbx, rdi
	mov rbp, rsi

	xor rax, rax
	add rbp, 8		; получаем указатель на ключ из записи в словаре
	call string_equals

	cmp rax, 1		; если строка найдена - выходим из цикла
	je .found

	mov rbp, [rbp]	; получаем указатель на следующую запись словаря
	test rbp, rbp	; поледний элемент словаря?
	jne find_word	; если не последний -> следующая итерация

	xor rax, rax	; возвращаем код ошибки
	ret
  .found:
	mov rax, rbp	; возвращаем искомое значение
	ret